---
- name: Install NodeRED
  npm:
    name: node-red
    state: latest
    global: yes

# Setup user for NodeRed to run as.
- name: Add NodeRED group
  group:
      name: nodered
- name: Add NodeRED user
  user:
      name: nodered
      append: yes
      group: nodered
      groups: dialout,i2c,spi
      shell: /usr/sbin/nologin

- name: NodeRed Working dir exists
  file:
      path: /home/nodered/.node-red
      state: directory
      owner: nodered
      group: nodered
      mode: 0750

# Set admin interface password.
- name: Set NodeRED Admin Creditials
  template:
    src: files/settings.j2
    dest: /home/nodered/.node-red/settings.js
    owner: nodered
    group: nodered
    mode: '0600'
    backup: yes

# Install some node-red modules into where node-red can manage them.
- name: Install NodeRED modules
  npm:
      path: /home/nodered/.node-red
      state: latest
      name: "{{ item }}"
      production: yes
  become: true
  become_user: nodered
  with_items:
    - node-red-contrib-exosite
    - node-red-dashboard
    - node-red-node-smooth
    - node-red-node-random
    - node-red-node-pidcontrol
    - node-red-node-serialport
    - node-red-node-rbe
    # NOTE: Most of the time, am needing to login and install serialport by hand.
    # Do not know why.
  notify:
      - restart nodered

# On BB, there is a nodeRed installed, we need to not use its service and socket
- name: Unload old node-red systemd
  systemd: name={{ item }} state=stopped enabled=no
  with_items:
      - node-red.service
      - node-red.socket
  when: hardware_class == "beaglebone"

- name: Remove bb-node-red-installer
  apt: pkg={{ item }} state=absent
  with_items:
      - bb-node-red-installer
  when: hardware_class == "beaglebone"

# Now start NodeRED and have it start on boot.
- name: Copy systemd config for NodeRED
  copy: src=nodered.service dest=/lib/systemd/system/nodered.service

- name: Run NodeRED on boot
  systemd:
      name: nodered.service
      daemon_reload: yes
      enabled: yes
      state: started

